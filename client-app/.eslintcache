[{"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\index.tsx":"1","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\reportWebVitals.ts":"2","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\store.ts":"3","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\layout\\App.tsx":"4","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\dishStore.ts":"5","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\api\\agent.ts":"6","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\dashboard\\DishDashboard.tsx":"7","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\dashboard\\DishList.tsx":"8","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"9","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\dashboard\\DishItem.tsx":"10","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\categoryStore.ts":"11","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\layout\\NavBar.tsx":"12","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\dashboard\\DishListItemPlaceholder.tsx":"13","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\home\\HomePage.tsx":"14","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\models\\dish.ts":"15","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\form\\DishForm.tsx":"16","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\form\\MyTextArea.tsx":"17","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\form\\MyTextInput.tsx":"18","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\form\\MySelectInput.tsx":"19","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\models\\portion.ts":"20","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\imageUpload\\PhotoWidgetCropper.tsx":"21","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\imageUpload\\PhotoWidgetDropzone.tsx":"22","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\ingredientStore.ts":"23","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\models\\ingredient.ts":"24"},{"size":824,"mtime":1650992090332,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":588,"mtime":1651088856791,"results":"28","hashOfConfig":"26"},{"size":846,"mtime":1650965284857,"results":"29","hashOfConfig":"26"},{"size":2654,"mtime":1651072857678,"results":"30","hashOfConfig":"26"},{"size":1872,"mtime":1651096359574,"results":"31","hashOfConfig":"26"},{"size":1659,"mtime":1651092573119,"results":"32","hashOfConfig":"26"},{"size":459,"mtime":1650965391524,"results":"33","hashOfConfig":"26"},{"size":384,"mtime":1650734813976,"results":"34","hashOfConfig":"26"},{"size":3275,"mtime":1651089979528,"results":"35","hashOfConfig":"26"},{"size":1026,"mtime":1651062225855,"results":"36","hashOfConfig":"26"},{"size":1392,"mtime":1650909768353,"results":"37","hashOfConfig":"26"},{"size":2130,"mtime":1651092542011,"results":"38","hashOfConfig":"26"},{"size":1952,"mtime":1650974955979,"results":"39","hashOfConfig":"26"},{"size":1060,"mtime":1651089533937,"results":"40","hashOfConfig":"26"},{"size":8227,"mtime":1651136520256,"results":"41","hashOfConfig":"26"},{"size":690,"mtime":1648975414831,"results":"42","hashOfConfig":"26"},{"size":690,"mtime":1650976169851,"results":"43","hashOfConfig":"26"},{"size":987,"mtime":1648975414830,"results":"44","hashOfConfig":"26"},{"size":335,"mtime":1651089477934,"results":"45","hashOfConfig":"26"},{"size":701,"mtime":1651000316345,"results":"46","hashOfConfig":"26"},{"size":1205,"mtime":1651005081842,"results":"47","hashOfConfig":"26"},{"size":1057,"mtime":1651088800712,"results":"48","hashOfConfig":"26"},{"size":217,"mtime":1651093489848,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1vifz1o",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\index.tsx",[],["101","102"],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\reportWebVitals.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\store.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\dishStore.ts",["103"],"import { makeAutoObservable, reaction, runInAction } from 'mobx';\r\nimport agent from '../api/agent';\r\nimport { Dish, DishFormValues } from '../models/dish';\r\nimport { Portion } from '../models/portion';\r\n\r\nexport default class DishStore {\r\n    dishes: Dish[] = [];\r\n    loadingInitial = false;\r\n    predicate = new Map().set(\"categoryName\", \"All\");\r\n    loadingCreate = false;\r\n    // uploading = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.predicate.keys(),\r\n            () => {\r\n                this.dishes.splice(0, this.dishes.length);\r\n                this.loadDishes();\r\n            }\r\n        )\r\n    }\r\n\r\n    // computed property\r\n    get axiosParams() {\r\n        const params = new URLSearchParams();\r\n        this.predicate.forEach((value, key) => params.append(key, value));\r\n        // params.append(\"categoryName\", \"Pizza\");\r\n        return params;\r\n    }\r\n\r\n    setPredicate = (value: string) => {\r\n        const resetPredicate = () => {\r\n            this.predicate.forEach((value, key) => {\r\n                this.predicate.delete(key)\r\n            })\r\n        }  \r\n        resetPredicate();\r\n        this.predicate.set(\"categoryName\", value);\r\n    }\r\n\r\n    sortDishesPortions = (dishes: Dish[]) => {\r\n        dishes.forEach(dish => dish.portions.sort((p1, p2) => +p1.size.replace(/[^0-9]/g, '') - +p2.size.replace(/[^0-9]/g, '')))\r\n        return dishes;\r\n    }\r\n\r\n    loadDishes = async () => {\r\n        this.loadingInitial = true;\r\n        try {\r\n            const result = await agent.Dishes.list(this.axiosParams);\r\n            console.log(result);\r\n            runInAction(() => {\r\n                this.dishes = this.sortDishesPortions(result);\r\n                this.loadingInitial = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loadingInitial = false\r\n            });\r\n        }\r\n    }\r\n\r\n    createDish = async (dish: DishFormValues) => {\r\n        this.loadingCreate = true;\r\n        try {\r\n            // console.log(dish);\r\n            await agent.Dishes.create(dish);\r\n            runInAction(() => this.loadingCreate = false);\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingCreate = false);\r\n        }\r\n    }\r\n\r\n    uploadPhoto = async (dish: Dish, file: Blob) => {\r\n        // this.uploading = true;\r\n        try {\r\n            await agent.Dishes.uploadPhoto(dish.id, file);\r\n        } catch(error) {\r\n            console.log(error);\r\n            // runInAction(() => this.uploading = false);\r\n        }\r\n    }\r\n}","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\api\\agent.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\dashboard\\DishDashboard.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\dashboard\\DishList.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\dashboard\\DishItem.tsx",["104"],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\categoryStore.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\layout\\NavBar.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\dashboard\\DishListItemPlaceholder.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\home\\HomePage.tsx",["105"],"import React from \"react\";\r\nimport { Container, Header, Segment, Image, Button } from \"semantic-ui-react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nexport default observer(function HomePage() {\r\n    // const {userStore, modalStore} = useStore();\r\n    \r\n    return (\r\n        <Segment inverted textAlign='center' vertical className='masthead'>\r\n            <Container text>\r\n                <Header as='h1' inverted> \r\n                    <Image \r\n                        size='massive' \r\n                        src='/assets/logo.png'\r\n                        alt='logo' \r\n                        style={{marginBottom: '12px'}} />\r\n                        Reactivities\r\n                </Header>\r\n                <>\r\n                        <Header as='h2' inverted content='Welcome to the Restaurant' />\r\n                        <Button as={Link} to='/dishes' size='huge' inverted>\r\n                            Go to the Restaurant!\r\n                        </Button>\r\n                </>\r\n                {/* {userStore.isLoggedIn ? (\r\n                    <>\r\n                        <Header as='h2' inverted content='Welcome to Reactivities' />\r\n                        <Button as={Link} to='/activities' size='huge' inverted>\r\n                            Go to Activities!\r\n                        </Button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\r\n                            Login!\r\n                        </Button>\r\n                        <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted>\r\n                            Register!\r\n                        </Button>\r\n                    </>\r\n                )} */}\r\n            </Container>\r\n        </Segment>\r\n    )\r\n})","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\models\\dish.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\form\\DishForm.tsx",["106","107"],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\form\\MyTextArea.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\form\\MyTextInput.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\form\\MySelectInput.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\models\\portion.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\imageUpload\\PhotoWidgetCropper.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\imageUpload\\PhotoWidgetDropzone.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\ingredientStore.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\models\\ingredient.ts",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":17},{"ruleId":"112","severity":1,"message":"116","line":2,"column":59,"nodeType":"114","messageId":"115","endLine":2,"endColumn":65},{"ruleId":"112","severity":1,"message":"117","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":18},{"ruleId":"112","severity":1,"message":"118","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":19},{"ruleId":"112","severity":1,"message":"119","line":28,"column":18,"nodeType":"114","messageId":"115","endLine":28,"endColumn":25},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"@typescript-eslint/no-unused-vars","'Portion' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'useStore' is defined but never used.","'useParams' is defined but never used.","'setDish' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]