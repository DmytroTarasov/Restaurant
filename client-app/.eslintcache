[{"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\index.tsx":"1","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\reportWebVitals.ts":"2","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\store.ts":"3","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\layout\\App.tsx":"4","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\dishStore.ts":"5","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\api\\agent.ts":"6","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\dashboard\\DishDashboard.tsx":"7","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\dashboard\\DishList.tsx":"8","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"9","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\dashboard\\DishItem.tsx":"10","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\categoryStore.ts":"11","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\layout\\NavBar.tsx":"12","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\dashboard\\DishListItemPlaceholder.tsx":"13","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\home\\HomePage.tsx":"14","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\models\\dish.ts":"15","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\form\\DishForm.tsx":"16","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\form\\MyTextArea.tsx":"17","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\form\\MyTextInput.tsx":"18","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\form\\MySelectInput.tsx":"19","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\models\\portion.ts":"20","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\imageUpload\\PhotoWidgetCropper.tsx":"21","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\imageUpload\\PhotoWidgetDropzone.tsx":"22","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\ingredientStore.ts":"23","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\models\\ingredient.ts":"24","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\models\\user.ts":"25","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\userStore.ts":"26","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\users\\LoginForm.tsx":"27","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\commonStore.ts":"28","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\modalStore.ts":"29","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx":"30","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\users\\RegisterForm.tsx":"31","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\errors\\ValidationErrors.tsx":"32","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\cart\\ShoppingCart.tsx":"33","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\orderStore.ts":"34","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\orders\\OrderList.tsx":"35","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\models\\order.ts":"36","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\models\\portionOrder.ts":"37","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\dishOrder.ts":"38","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\layout\\PrivateRoute.tsx":"39","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\layout\\PrivateRouteAdmin.tsx":"40","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\errors\\NotFound.tsx":"41"},{"size":824,"mtime":1650992090332,"results":"42","hashOfConfig":"43"},{"size":425,"mtime":499162500000,"results":"44","hashOfConfig":"43"},{"size":1004,"mtime":1651257308568,"results":"45","hashOfConfig":"43"},{"size":1846,"mtime":1651394935008,"results":"46","hashOfConfig":"43"},{"size":2418,"mtime":1651396773138,"results":"47","hashOfConfig":"43"},{"size":2410,"mtime":1651172383696,"results":"48","hashOfConfig":"43"},{"size":1664,"mtime":1651393455933,"results":"49","hashOfConfig":"43"},{"size":459,"mtime":1650965391524,"results":"50","hashOfConfig":"43"},{"size":384,"mtime":1650734813976,"results":"51","hashOfConfig":"43"},{"size":4795,"mtime":1651352970344,"results":"52","hashOfConfig":"43"},{"size":1026,"mtime":1651062225855,"results":"53","hashOfConfig":"43"},{"size":2965,"mtime":1651393211682,"results":"54","hashOfConfig":"43"},{"size":2130,"mtime":1651092542011,"results":"55","hashOfConfig":"43"},{"size":2028,"mtime":1651175667820,"results":"56","hashOfConfig":"43"},{"size":1059,"mtime":1651348042135,"results":"57","hashOfConfig":"43"},{"size":8197,"mtime":1651348105324,"results":"58","hashOfConfig":"43"},{"size":690,"mtime":1648975414831,"results":"59","hashOfConfig":"43"},{"size":690,"mtime":1650976169851,"results":"60","hashOfConfig":"43"},{"size":987,"mtime":1648975414830,"results":"61","hashOfConfig":"43"},{"size":359,"mtime":1651347930427,"results":"62","hashOfConfig":"43"},{"size":701,"mtime":1651000316345,"results":"63","hashOfConfig":"43"},{"size":1205,"mtime":1651005081842,"results":"64","hashOfConfig":"43"},{"size":1057,"mtime":1651088800712,"results":"65","hashOfConfig":"43"},{"size":217,"mtime":1651093489848,"results":"66","hashOfConfig":"43"},{"size":229,"mtime":1651162068778,"results":"67","hashOfConfig":"43"},{"size":2056,"mtime":1651396796453,"results":"68","hashOfConfig":"43"},{"size":1391,"mtime":1651173243952,"results":"69","hashOfConfig":"43"},{"size":678,"mtime":1651171677452,"results":"70","hashOfConfig":"43"},{"size":519,"mtime":1651172570001,"results":"71","hashOfConfig":"43"},{"size":491,"mtime":1651172727679,"results":"72","hashOfConfig":"43"},{"size":2044,"mtime":1651179599390,"results":"73","hashOfConfig":"43"},{"size":529,"mtime":1651179224415,"results":"74","hashOfConfig":"43"},{"size":2514,"mtime":1651396592479,"results":"75","hashOfConfig":"43"},{"size":2149,"mtime":1651499868785,"results":"76","hashOfConfig":"43"},{"size":4312,"mtime":1651356496495,"results":"77","hashOfConfig":"43"},{"size":426,"mtime":1651347970931,"results":"78","hashOfConfig":"43"},{"size":503,"mtime":1651350908308,"results":"79","hashOfConfig":"43"},{"size":260,"mtime":1651351087465,"results":"80","hashOfConfig":"43"},{"size":564,"mtime":1651394056265,"results":"81","hashOfConfig":"43"},{"size":600,"mtime":1651394185154,"results":"82","hashOfConfig":"43"},{"size":660,"mtime":1651395305287,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1vifz1o",{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\index.tsx",[],["169","170"],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\reportWebVitals.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\store.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\layout\\App.tsx",["171"],"import { observer } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport DishDashboard from '../../features/dishes/dashboard/DishDashboard';\nimport DishForm from '../../features/dishes/form/DishForm';\nimport NotFound from '../../features/errors/NotFound';\nimport HomePage from '../../features/home/HomePage';\nimport OrderList from '../../features/orders/OrderList';\nimport LoginForm from '../../features/users/LoginForm';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport { useStore } from '../stores/store';\nimport LoadingComponent from './LoadingComponent';\nimport NavBar from './NavBar';\nimport PrivateRoute from './PrivateRoute';\nimport PrivateRouteAdmin from './PrivateRouteAdmin';\n\nfunction App() {\n\tconst {commonStore, userStore} = useStore();\n\n\tuseEffect(() => {\n\t\tif (commonStore.token) {\n\t\t\tuserStore.getUser().finally(() => commonStore.setAppLoaded());\n\t\t} else {\n\t\t\tcommonStore.setAppLoaded();\n\t\t}\n\t}, [commonStore, userStore])\n\n\tif (!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />\n\n\treturn (\n\t\t<>\n\t\t\t{/* <ToastContainer position='bottom-right' hideProgressBar /> */}\n\t\t\t<ModalContainer />\n\t\t\t<Route exact path=\"/\" component={HomePage} />\n\t\t\t<Route \n\t\t\t\tpath={'/(.+)'}\n\t\t\t\trender={() => (\n\t\t\t\t<>\n\t\t\t\t\t<NavBar />\n\t\t\t\t\t<Container style={{ marginTop: \"7em\" }}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<PrivateRoute path='/dishes' component={DishDashboard} />\n\t\t\t\t\t\t\t<PrivateRouteAdmin path='/createDish' component={DishForm} />\n\t\t\t\t\t\t\t{/* <Route path='/login' component={LoginForm} /> */}\n\t\t\t\t\t\t\t<PrivateRouteAdmin path='/orders' component={OrderList} />\n\t\t\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Container>\n\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t/>\n\t</>\n\t);\n}\n\nexport default observer(App);\n","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\dishStore.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\api\\agent.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\dashboard\\DishDashboard.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\dashboard\\DishList.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\dashboard\\DishItem.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\categoryStore.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\layout\\NavBar.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\dashboard\\DishListItemPlaceholder.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\home\\HomePage.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\models\\dish.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\dishes\\form\\DishForm.tsx",["172","173"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Divider, Grid, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { v4 as uuid } from 'uuid';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { Dish, DishFormValues } from \"../../../app/models/dish\";\r\nimport { Portion } from \"../../../app/models/portion\";\r\nimport PhotoWidgetDropzone from \"../../../app/common/imageUpload/PhotoWidgetDropzone\";\r\nimport PhotoWidgetCropper from \"../../../app/common/imageUpload/PhotoWidgetCropper\";\r\nimport { Ingredient } from \"../../../app/models/ingredient\";\r\n\r\nexport default observer(function DishForm() {\r\n    const history = useHistory();\r\n    const {dishStore, categoryStore, ingredientStore} = useStore();\r\n    const {createDish, uploadPhoto} = dishStore;\r\n    const {formCategoryOptions, categoryOptions, \r\n        categories, loadCategories, loadingCategories} = categoryStore;\r\n    const {loadIngredients, ingredients, ingredientsOptions, formIngredientOptions} = ingredientStore\r\n\r\n    const [dish, setDish] = useState<DishFormValues>(new DishFormValues());\r\n    const [portions, setPortions] = useState<Portion[]>([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [ingredientsLocal, setIngredientsLocal] = useState<Ingredient[]>([]);\r\n\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>();\r\n\r\n    function onCrop(dish: Dish) {\r\n        if (cropper) {\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(dish, blob!));\r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required('The dish is required'),\r\n        description: Yup.string().required('The dish description is required'),\r\n    })\r\n\r\n    useEffect(() => {\r\n        loadCategories().then(() => formCategoryOptions());\r\n        loadIngredients().then(() => formIngredientOptions());\r\n        // return () => {\r\n        //     // actually, invoke dispose() method for each file to clean up resources\r\n        //     files.forEach((file: any) => URL.revokeObjectURL(file.preview))\r\n        // }\r\n    }, [formCategoryOptions, loadCategories, formIngredientOptions, loadIngredients]);\r\n\r\n    function handleFormSubmit(dish: DishFormValues) {\r\n        if (!dish.id) { \r\n            let category = categories.find(c => c.name === dish.category)!!;\r\n            let newIngredients: Ingredient[] = [];\r\n            dish.ingredients.filter(i => !!i.name).forEach(ingredient => {\r\n                newIngredients.push(ingredients.find(i => i.name === ingredient.name)!!);\r\n            })\r\n            let newDish = {\r\n                ...dish,\r\n                category,\r\n                portions: dish.portions.filter(p => !!p.price && !!p.size), // portions that are not empty\r\n                ingredients: newIngredients, // ingredients that are not empty\r\n                id: uuid()\r\n            };\r\n\r\n            // console.log(newDish);\r\n\r\n            setLoading(true);\r\n            createDish(newDish).then(() => onCrop(newDish)).then(() => setTimeout(() => {\r\n                history.push('/dishes');\r\n                setLoading(false);\r\n            }, 5000));\r\n        } \r\n    }\r\n\r\n    function handlePortionCreate() {\r\n        setPortions([...portions, {size: '', price: 0}]);\r\n    }\r\n\r\n    function handleIngredientCreate() {\r\n        setIngredientsLocal([...ingredientsLocal, {name: ''}]);\r\n    }\r\n\r\n    if(loadingCategories) return <LoadingComponent content=\"Loading...\"/>\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Header content='Dish Info' sub style={{fontSize: '18px', marginBottom: '10px', color: '#cb410b'}} />\r\n            {/* widget start */}\r\n            <Grid>\r\n                <Grid.Column width={4}>\r\n                    <Header sub content='Add photo' style={{textAlign: 'center', color: '#cb410b'}} />\r\n                    <PhotoWidgetDropzone setFiles={setFiles} />\r\n                </Grid.Column>\r\n                <Grid.Column width={1} />\r\n                <Grid.Column width={4}>\r\n                    <Header sub content='Resize photo' style={{textAlign: 'center', color: '#cb410b'}} />\r\n                    {files &&\r\n                        files.length > 0 && (\r\n                            <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview}/>\r\n                        )}\r\n                </Grid.Column>\r\n                <Grid.Column width={1} />\r\n            </Grid>\r\n            {/* widget end */}\r\n            <Formik \r\n                validationSchema={validationSchema}\r\n                enableReinitialize \r\n                initialValues={dish} \r\n                onSubmit={values => handleFormSubmit(values)}>\r\n                {({handleSubmit, isValid, dirty}) => (\r\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                        <MyTextInput name='name' placeholder='Name' />\r\n                        <MyTextArea name='description' placeholder='Description' rows={3} />\r\n                        <MySelectInput options={categoryOptions} name='category' placeholder='Category' />\r\n                        <Header content='Ingredients' sub style={{fontSize: '16px', marginBottom: '10px', color: '#cb410b'}} />  \r\n                        {ingredientsLocal && ingredientsLocal.map((ingredient, index) => (\r\n                            <Fragment key={index}>\r\n                                <MySelectInput \r\n                                    options={ingredientsOptions} \r\n                                    name={`ingredients[${index}].name`} \r\n                                    placeholder='Ingredient' />\r\n                            </Fragment>\r\n                        ))}\r\n                        <Button  \r\n                            type='button' \r\n                            content='Add ingredient'\r\n                            onClick={() => handleIngredientCreate()}\r\n                            style={{marginBottom: '20px', backgroundColor: '#cb410b', color: '#fff'}} />       \r\n                        <Divider />\r\n                        <Header content='Portions' sub style={{fontSize: '16px', marginBottom: '10px', color: '#cb410b'}} />          \r\n                        {portions && portions.map((portion, index) => (\r\n                            <Fragment key={index}>\r\n                                <Header content={index + 1} style={{fontSize: '14px', color: '#cb410b'}} />\r\n                                <MyTextInput name={`portions[${index}].size`} placeholder='Size' />\r\n                                <MyTextInput name={`portions[${index}].price`} placeholder='Price' />\r\n                            </Fragment>\r\n                        ))} \r\n                        <Button  \r\n                            type='button' \r\n                            content='Add portion'\r\n                            onClick={() => handlePortionCreate()}\r\n                            style={{marginBottom: '20px', backgroundColor: '#cb410b', color: '#fff'}} /> \r\n                        <Button \r\n                            disabled={loading || !dirty || !isValid}\r\n                            loading={loading} \r\n                            floated='right' \r\n                            positive \r\n                            type='submit' \r\n                            content='Submit' />\r\n                        <Button \r\n                            as={Link} \r\n                            to='/dishes' \r\n                            floated='right' \r\n                            type='submit' \r\n                            content='Cancel' />\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </Segment>\r\n    )\r\n})\r\n\r\n","C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\form\\MyTextArea.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\form\\MyTextInput.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\form\\MySelectInput.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\models\\portion.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\imageUpload\\PhotoWidgetCropper.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\imageUpload\\PhotoWidgetDropzone.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\ingredientStore.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\models\\ingredient.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\models\\user.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\userStore.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\users\\LoginForm.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\commonStore.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\modalStore.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\users\\RegisterForm.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\errors\\ValidationErrors.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\cart\\ShoppingCart.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\orderStore.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\orders\\OrderList.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\models\\order.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\models\\portionOrder.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\stores\\dishOrder.ts",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\layout\\PrivateRoute.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\app\\layout\\PrivateRouteAdmin.tsx",[],"C:\\Dima\\.NET_labs\\Restaurant\\client-app\\src\\features\\errors\\NotFound.tsx",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":10,"column":8,"nodeType":"180","messageId":"181","endLine":10,"endColumn":17},{"ruleId":"178","severity":1,"message":"182","line":5,"column":10,"nodeType":"180","messageId":"181","endLine":5,"endColumn":19},{"ruleId":"178","severity":1,"message":"183","line":28,"column":18,"nodeType":"180","messageId":"181","endLine":28,"endColumn":25},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"@typescript-eslint/no-unused-vars","'LoginForm' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'setDish' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]